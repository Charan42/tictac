{"version":3,"sources":["features/tictac/Tictac.module.css","util/helperFunctions.js","util/constants.js","features/tictac/tictacSlice.js","features/tictac/Board.js","features/tictac/Tictac.js","App.js","app/store.js","index.js"],"names":["module","exports","getTicTacObject","size","arr","Array","Number","fill","map","a","b","brr","obj","forEach","players","X","initialState","board","gameStatus","boardSize","winner","player","tictacSlice","createSlice","name","reducers","setBoardSize","state","action","payload","setBoxValue","key","setWinner","setPlayer","actions","Board","dispatch","useDispatch","boardObj","useSelector","tictac","arrayOfBoxes","Object","keys","O","totalWidth","result","isWon","i","j","push","filter","Set","length","dia1","dia2","validateTicTacboard","className","style","width","box","onClick","value","handleClick","target","attributes","Tictac","useState","sizeOfBoard","setSizeOfBoard","styles","textbox","onChange","e","button","App","store","configureStore","reducer","tictacReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29a0b7cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Tictac_row__qXcGr\",\"value\":\"Tictac_value__1-pT1\",\"button\":\"Tictac_button__3HaqN\",\"textbox\":\"Tictac_textbox__2D97j\"};","\nexport const getTicTacObject = (size) => {\n    let arr = Array(Number(size)).fill().map((a,b) => b+1)\n    let brr = [...arr]\n\n    let obj = {}\n    arr.forEach(a => {\n        brr.forEach(b => {\n            obj[`${a}-${b}`] = null\n        })\n    })\n\n    return obj\n}\n\n\nexport const validateTicTacboard = (boardObj, boardSize) => {\n    // console.log(boardObj)\n    const result = {\n        isWon: false,\n        winner: '-'\n    }\n    // console.log(boardSize);\n    // for row verification\n    for(let i=1;i<=boardSize;i++){\n        let arr = [];\n        for(let j=1;j<=boardSize;j++){\n            if(boardObj[`${i}-${j}`]){\n                arr.push(boardObj[`${i}-${j}`])\n            }\n        }\n        // console.log(arr)\n        arr.filter(a=> a!==null)\n        let brr = [...new Set(arr)]\n        if(arr.length == boardSize && brr.length === 1){\n            result.isWon = true\n            result.winner = brr[0]\n            return result\n        }\n    }\n    // console.log(result)\n    // for column verification\n    for(let i=1;i<=boardSize;i++){\n        let arr = [];\n        for(let j=1;j<=boardSize;j++){\n            if(boardObj[`${j}-${i}`]){\n                arr.push(boardObj[`${j}-${i}`])\n            }\n        }\n        arr.filter(a=> a!==null)\n        let brr = [...new Set(arr)]\n        if(arr.length == boardSize && brr.length === 1){\n            result.isWon = true\n            result.winner = brr[0]\n            return result\n        }\n    }\n\n    // validation for backward diagnonal boxes\n    let dia1 = [];\n    for(let i=1;i<=boardSize;i++){\n\n        if(boardObj[`${i}-${i}`]){\n            dia1.push(boardObj[`${i}-${i}`])\n        }\n        dia1.filter(a=> a!==null)\n        let brr = [...new Set(dia1)]\n        if(dia1.length == boardSize && brr.length === 1){\n            result.isWon = true\n            result.winner = brr[0]\n            return result\n        }\n    }\n\n    // validation for forward diagnonal boxes\n    let dia2 = [];\n    let j = boardSize\n    for(let i=1;i<=boardSize;i++){\n        \n        if(boardObj[`${i}-${j}`]){\n            dia2.push(boardObj[`${i}-${j}`])\n        }\n        dia2.filter(a=> a!==null)\n        let brr = [...new Set(dia2)]\n        // console.log('arr')\n        if(dia2.length == boardSize && brr.length ===1){\n            result.isWon = true\n            result.winner = brr[0]\n            return result\n        }\n        j--\n    }\n\n    // return false if no winning combo is met\n    return result\n}","\nexport const players = {\n    X : 'X',\n    O : 'O'\n}\n","import { createSlice } from \"@reduxjs/toolkit\"\nimport { getTicTacObject } from '../../util/helperFunctions'\nimport { players } from '../../util/constants'\n\nconst { X } = players\n\nconst initialState = {\n    board : {\n        obj : getTicTacObject(3),\n    },\n    gameStatus : 'running',\n    boardSize: 3,\n    winner: '-',\n    player: X\n}\n\nexport const tictacSlice = createSlice({\n    name: 'tictac',\n    initialState,\n    reducers: {\n        setBoardSize: (state, action) => {\n            state.board.obj = getTicTacObject(action.payload)\n            state.boardSize = action.payload\n        },\n        setBoxValue: (state, action) => {\n            state.board.obj[`${action.payload.key}`] = action.payload.player\n            // state.board.obj = action.payload\n        },\n        setWinner: (state, action) => {\n            state.board.winner = action.payload\n        },\n        setPlayer: (state, action) => {\n            state.player = action.payload\n        }\n    }\n})\n\nexport const { setBoardSize, setBoxValue, setWinner, setPlayer } = tictacSlice.actions\n\nexport default tictacSlice.reducer","import { useSelector, useDispatch } from 'react-redux'\nimport { \n    setBoxValue,\n    setPlayer\n} from './tictacSlice'\nimport { validateTicTacboard } from '../../util/helperFunctions'\nimport { players } from '../../util/constants'\n\nconst Board = () => {\n    const dispatch = useDispatch()\n    const boardObj = useSelector((state) => state.tictac.board.obj )\n    const boardSize = useSelector((state) => state.tictac.boardSize )\n    const player = useSelector((state) => state.tictac.player )\n    const arrayOfBoxes = Object.keys(boardObj)\n    const { X, O } = players\n\n    const totalWidth = boardSize*32 -2\n    let {isWon, winner} = validateTicTacboard(boardObj, boardSize)\n\n    const handleClick = (box) =>{\n        const key = box['data-key'].value\n        const value = boardObj[`${key}`]\n        if(value === X || value === O || isWon ){\n            return\n        }\n        dispatch(setBoxValue({key, player}))\n        dispatch(setPlayer(player === X ? O : X))\n    }\n\n    return(\n        <div className=\"container\" style={{width: `${totalWidth}px`}}>\n            <div className=\"board\">\n                {arrayOfBoxes.map((box,i) => {\n                    return(\n                        <div key={i} className=\"box\" data-testid=\"boxes\" data-key={box} onClick={(box) => handleClick(box.target.attributes)}>\n                            {boardObj[box]}\n                        </div>\n                    )\n                })}\n            </div>\n        \n            {!isWon && <div>this is {player}'s turn</div>}\n            {isWon && <div>Winner is  {winner}</div>}\n        </div>\n    )\n}\nexport default Board;\n\n","import { useState } from 'react';\nimport {  useDispatch } from 'react-redux'\nimport { \n    setBoardSize,\n    setPlayer\n} from './tictacSlice'\nimport styles from '../tictac/Tictac.module.css';\nimport Board from './Board'\nimport { players } from '../../util/constants'\n\nexport const Tictac = () => {\n    const { X } = players\n    const dispatch = useDispatch();\n    const [sizeOfBoard, setSizeOfBoard] = useState(3);\n\n    const setNewBoard = () => {\n        dispatch(setBoardSize(sizeOfBoard))\n        dispatch(setPlayer(X))\n    }\n    return (\n        <div>\n            <Board />\n            <input\n                className={styles.textbox}\n                aria-label=\"Set board size\"\n                value={sizeOfBoard}\n                onChange={(e) => setSizeOfBoard(e.target.value)}\n            />\n            <button\n                className={styles.button}\n                onClick={() => setNewBoard() }>set board size</button>\n        </div>\n    )\n}","import React from 'react';\nimport { Tictac } from './features/tictac/Tictac'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Tictac />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport tictacReducer from '../features/tictac/tictacSlice';\n\nexport const store = configureStore({\n  reducer: {\n    tictac: tictacReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}